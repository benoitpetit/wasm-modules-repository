{
  "name": "math-wasm",
  "description": "High-performance mathematical calculation module written in Go and compiled to WebAssembly",
  "version": "1.0.0",
  "author": "Ben",
  "license": "MIT",
  "tags": [
    "math",
    "calculator",
    "arithmetic",
    "wasm",
    "go"
  ],
  "functions": [
    {
      "name": "add",
      "description": "Add two numbers",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "description": "First number to add"
        },
        {
          "name": "b",
          "type": "number",
          "description": "Second number to add"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.add(5, 3); // returns 8"
    },
    {
      "name": "subtract",
      "description": "Subtract two numbers",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "description": "First number"
        },
        {
          "name": "b",
          "type": "number",
          "description": "Number to subtract"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.subtract(10, 3); // returns 7"
    },
    {
      "name": "multiply",
      "description": "Multiply two numbers",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "description": "First number"
        },
        {
          "name": "b",
          "type": "number",
          "description": "Second number"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.multiply(4, 7); // returns 28"
    },
    {
      "name": "divide",
      "description": "Divide two numbers",
      "parameters": [
        {
          "name": "a",
          "type": "number",
          "description": "Dividend"
        },
        {
          "name": "b",
          "type": "number",
          "description": "Divisor"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.divide(15, 3); // returns 5"
    },
    {
      "name": "power",
      "description": "Raise a number to a power",
      "parameters": [
        {
          "name": "base",
          "type": "number",
          "description": "Base number"
        },
        {
          "name": "exponent",
          "type": "number",
          "description": "Exponent"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.power(2, 3); // returns 8"
    },
    {
      "name": "factorial",
      "description": "Calculate the factorial of a number",
      "parameters": [
        {
          "name": "n",
          "type": "number",
          "description": "The number to calculate factorial for"
        }
      ],
      "returnType": "number",
      "example": "const result = mathWasm.factorial(5); // returns 120"
    },
    {
      "name": "setSilentMode",
      "description": "Enable/disable silent mode for logs",
      "parameters": [
        {
          "name": "silent",
          "type": "boolean",
          "description": "true to enable silent mode, false to disable it"
        }
      ],
      "returnType": "boolean",
      "example": "mathWasm.setSilentMode(true); // enable silent mode"
    },
    {
      "name": "getAvailableFunctions",
      "description": "Get list of all available functions in the module",
      "parameters": [],
      "returnType": "Array<string>",
      "example": "const functions = mathWasm.getAvailableFunctions(); // returns ['add', 'subtract', 'multiply', 'divide', 'power', 'factorial', 'getAvailableFunctions', 'setSilentMode']"
    }
  ],
  "types": [
    {
      "name": "MathError",
      "description": "Mathematical operation error",
      "properties": {
        "message": {
          "type": "string",
          "description": "Error message describing the mathematical issue"
        },
        "operation": {
          "type": "string",
          "description": "The operation that caused the error"
        },
        "parameters": {
          "type": "Array<number>",
          "description": "The parameters that were passed to the operation"
        }
      }
    },
    {
      "name": "MathResult",
      "description": "Result of a mathematical operation",
      "properties": {
        "value": {
          "type": "number",
          "description": "The computed result"
        },
        "operation": {
          "type": "string",
          "description": "The operation that was performed"
        },
        "inputs": {
          "type": "Array<number>",
          "description": "The input parameters used"
        }
      }
    }
  ],
  "security": {
    "features": [
      "Input validation for numerical parameters",
      "Safe arithmetic operations with overflow protection",
      "Memory-safe Go implementation",
      "No external dependencies",
      "Protection against division by zero",
      "Factorial input bounds checking"
    ],
    "cors": "N/A - Mathematical operations only",
    "ssl": "N/A - No network operations"
  },
  "compatibility": {
    "browsers": [
      "Chrome 57+",
      "Firefox 52+",
      "Safari 11+",
      "Edge 16+"
    ],
    "gowm": "Compatible with gowm npm package manager"
  },
  "performance": {
    "features": [
      "Compiled WebAssembly for optimal performance",
      "Native Go math operations",
      "Minimal JavaScript overhead",
      "No external library dependencies",
      "Efficient integer calculations",
      "Optimized floating-point operations"
    ]
  },
  "examples": [
    {
      "title": "Basic Arithmetic Operations",
      "code": "// Loading the WASM module\nconst go = new Go();\nconst result = await WebAssembly.instantiateStreaming(fetch('main.wasm'), go.importObject);\ngo.run(result.instance);\n\n// Basic calculations\nconst sum = add(5, 3);        // 8\nconst diff = subtract(10, 4); // 6\nconst product = multiply(4, 7); // 28\nconst quotient = divide(15, 3); // 5\n\nconsole.log('Results:', { sum, diff, product, quotient });"
    },
    {
      "title": "Advanced Operations",
      "code": "// Power and factorial calculations\nconst squared = power(2, 3);    // 8\nconst fact = factorial(5);      // 120\n\nconsole.log('2^3 =', squared);\nconsole.log('5! =', fact);\n\n// Error handling\ntry {\n  const invalid = divide(10, 0);  // Returns error string\n  console.log('Division result:', invalid);\n} catch (error) {\n  console.error('Math error:', error);\n}"
    },
    {
      "title": "Silent Mode Usage",
      "code": "// Enable silent mode to reduce console output\nsetSilentMode(true);\n\n// Operations will no longer produce logs\nconst result = multiply(100, 200);\n\n// Check available functions\nconst functions = getAvailableFunctions();\nconsole.log('Available functions:', functions);\n\n// Disable silent mode\nsetSilentMode(false);"
    },
    {
      "title": "Batch Calculations",
      "code": "// Process multiple calculations efficiently\nsetSilentMode(true); // Reduce logging for batch operations\n\nconst numbers = [1, 2, 3, 4, 5];\nconst results = {\n  sums: numbers.map(n => add(n, 10)),\n  squares: numbers.map(n => power(n, 2)),\n  factorials: numbers.filter(n => n <= 5).map(n => factorial(n))\n};\n\nconsole.log('Batch results:', results);\nsetSilentMode(false);"
    }
  ],
  "buildInfo": {
    "language": "Go",
    "target": "js/wasm",
    "buildCommand": "./build.sh",
    "outputFile": "main.wasm",
    "goModule": true,
    "buildTime": "Generated during build process",
    "compilerFlags": [
      "GOOS=js",
      "GOARCH=wasm"
    ]
  },
  "dependencies": [],
  "wasmConfig": {
    "filename": "main.wasm",
    "goWasmExecRequired": true,
    "globalFunctions": true,
    "memoryInitialPages": 256,
    "memoryMaximumPages": 512
  }
}